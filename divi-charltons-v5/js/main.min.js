import FilterButton from "./FilterButton.js"; const currentUrl = window.location.href, origin = window.location.origin; function customHeaderNavigation() { const e = document.querySelector("header"), t = document.querySelector(".mobile_nav_show"); if (e && t) { const n = e.offsetHeight; window.addEventListener("resize", (e => { t.style.top = `${n}px` })), t.style.top = `${n}px` } const n = document.querySelectorAll(".nav_parent_list_item"), a = document.querySelectorAll(".nav_child_list_item .btn_wrapper button"), s = document?.querySelectorAll(".grandchild_ul"), i = document.querySelectorAll(".post_wrapper"); let o = null; n.forEach((e => { e.getAttribute("data-parentlistid"); const t = e?.querySelector(".submenu_wrapper"), n = t?.querySelectorAll(".nav_child_list_item button"); t?.addEventListener("mouseenter", (() => { e.classList.add("active-hovered"), t.classList.add("active-hover") })), t?.addEventListener("mouseleave", (() => { const a = t.querySelectorAll(".card-post"); e.classList.remove("active-hovered"), t.classList.remove("active-hover"), s.forEach((e => { e.classList.remove("active-hover"); const t = e.querySelector(".grandchild_list_item.active"); t && t.classList.remove("active") })), a.forEach((e => { const t = e.querySelector(".post_wrapper.active"); t?.classList.contains("active") && t.classList.remove("active") })), n.forEach((e => { const t = e.closest(".nav_child_list_item"); e.classList.contains("opened") && (e.classList.remove("opened"), o = null), t.classList.contains("active") && t.classList.remove("active") })) })) })), a.forEach((e => { e.addEventListener("click", (t => { const n = t.target.closest(".nav_parent_list_item").querySelectorAll(".grand_children .grandchild_ul"), a = t.target.closest(".nav_child_list_item"); if (e === o) return e.classList.toggle("opened"), n.forEach((t => { e.id === t.id && t.classList.toggle("active-hover") })), e.classList.contains("opened") ? a.classList.add("active") : a.classList.remove("active"), void (e.classList.contains("opened") || (o = null)); if (o) { o.classList.remove("opened"); const e = o.closest(".nav_child_list_item"); e && e.classList.remove("active") } n.forEach((e => { e.classList.remove("active-hover") })), n.forEach((t => { e.id === t.id && (e.classList.toggle("opened"), t.classList.add("active-hover")) })), a.classList.add("active"), o = e })) })); const r = document.querySelectorAll(".grandchild_list_item"); r.forEach((e => { const t = e.querySelector("a").getAttribute("href"); e.addEventListener("mouseenter", (() => { r.forEach((e => e.classList.remove("active"))), e.classList.add("active"), i.forEach((e => { e.getAttribute("data-url") === t ? e.classList.add("active") : e.classList.remove("active") })) })) })), menuMobileBtnToggle(), mobilePlusIconClick(), customSearch(), revealSearch() } function customSearch() { const e = document?.getElementById("search-input"), t = document.querySelector(".search_matches_wrapper"), n = document.querySelector(".search-results-list"), a = document.createElement("div"); a.className = "loading-indicator", a.textContent = "Loading...", a.style.display = "none", t?.appendChild(a); const s = {}; e && (e.addEventListener("focus", (function () { !async function () { try { const e = await fetchPostData(ajax_object.ajax_url, { action: "ajax_latest_posts" }); n.innerHTML = e, t.style.display = "block" } catch (e) { console.error("Error:", e) } }() })), e.addEventListener("input", debounce((async function () { let e = this.value.trim(); if (e.length > 2) if (s[e]) n.innerHTML = s[e], t.style.display = "block"; else { a.style.display = "block"; try { const a = await fetchPostData(ajax_object.ajax_url, { action: "ajax_search", search: e }); s[e] = a, n.innerHTML = a, t.style.display = "block" } catch (e) { console.error("Error:", e) } finally { a.style.display = "none" } } else n.innerHTML = "", t.style.display = "none" }), 300))), document.addEventListener("click", (function (n) { t.contains(n.target) || e.contains(n.target) || (t.style.display = "none") })) } function revealSearch() { const e = document.querySelector("header"), t = document.getElementById("showsearchinput"), n = document?.getElementById("search-input"), a = document.querySelector(".nav_search_wrapper"), s = document.querySelector(".search_wrapper"), i = document.getElementById("close_search"); t?.addEventListener("click", (() => { a.classList.add("hide-animate"), e.classList.add("search-open"), setTimeout((() => { toggleClass(a, "hide-animate", "hidden"), toggleClass(s, "d-none", "show"), n.focus() }), 200) })), i?.addEventListener("click", (() => { toggleClass(s, "show", "hide-animate"), e.classList.remove("search-open"), setTimeout((() => { toggleClass(s, "hide-animate", "d-none"), toggleClass(a, "hidden", "show") }), 200) })) } function mobilePlusIconClick() { const e = document.querySelectorAll(".sm_plus_icon"), t = document.querySelectorAll(".sm_plus_icon_child"); e.forEach((e => { const t = e.dataset.smiconplus, n = document.getElementById(t); e.addEventListener("click", (() => { window.innerWidth <= 1310 && n && (n.classList.toggle("active"), e.classList.toggle("active")) })) })), t.forEach((e => { e.addEventListener("click", (() => { window.innerWidth <= 1310 && document.querySelectorAll(".grandchild_ul_sm").forEach((t => { t.id === e.getAttribute("data-childsmicon") && (t.classList.toggle("active"), e.classList.toggle("active")) })) })) })) } function menuMobileBtnToggle() { const e = document.getElementById("menuMobileButton"), t = document.querySelector(".mobile_nav_show"); e?.addEventListener("click", (() => { if (window.innerWidth <= 1310) { "no" === e.getAttribute("data-menu-reveal") ? (e.setAttribute("data-menu-reveal", "yes"), e.classList.add("reveal_menu_nav"), e.querySelector(".default_mobile_menu").classList.add("hide"), e.querySelector(".close_mobile_menu").classList.add("active"), t.classList.contains("default") && (t.classList.remove("default"), t.classList.add("opened"))) : (e.setAttribute("data-menu-reveal", "no"), e.classList.remove("reveal_menu_nav"), t.classList.remove("opened"), t.classList.add("closed"), e.querySelector(".default_mobile_menu").classList.remove("hide"), e.querySelector(".close_mobile_menu").classList.remove("active"), setTimeout((() => { t.classList.remove("closed"), t.classList.add("default") }), 500)) } })) } async function getNewsPostItems(e = {}) { const { categories: t = ["news"], tags: n = [], postsPerPage: a = 15, page: s = 1 } = e; try { const e = await window.fetchCategoryIds(t); let i = []; n && n.length > 0 && (i = await window.fetchTagIds(n)); let o = `${window.origin}/wp-json/wp/v2/posts?per_page=${a}&page=${s}&_embed`; e.length > 0 && (o += `&categories=${e.join(",")}`), i.length > 0 && (o += `&tags=${i.join(",")}`); const r = await fetch(o); if (!r.ok) throw new Error(`Failed to fetch posts: ${r.status} ${r.statusText}`); return (await r.json()).map((e => transformPostData(e))) } catch (e) { throw console.error("Error in getNewsPostItems:", e), e } } function transformPostData(e) { const t = e._embedded?.["wp:featuredmedia"]?.[0]; return { id: e.id, title: e.title.rendered, url: e.link, post_date: formatPostDate(e.date), featured_image: e.featured_image_url || t?.source_url || "", featured_image_small: e.featured_image_url || t?.media_details?.sizes?.medium?.source_url || t?.source_url || "", featured_image_medium: e.featured_image_url || t?.media_details?.sizes?.large?.source_url || t?.source_url || "", featured_image_large: e.featured_image_url || t?.source_url || "", categories: e.categories || [], tags: e.tags || [], excerpt: e.excerpt?.rendered || "" } } function formatPostDate(e) { return new Date(e).toLocaleDateString("en-GB", { day: "numeric", month: "short", year: "numeric" }) } function debounce(e, t) { let n; return function (...a) { clearTimeout(n), n = setTimeout((() => e.apply(this, a)), t) } } async function fetchPostData(e, t) { const n = Object.entries(t).map((([e, t]) => `${encodeURIComponent(e)}=${encodeURIComponent(t)}`)).join("&"); return (await fetch(e, { method: "POST", headers: { "Content-Type": "application/x-www-form-urlencoded" }, body: n })).text() } function toggleClass(e, t, n) { e.classList.contains(t) && (e.classList.remove(t), e.classList.add(n)) } function toggleFilter(e) { e.preventDefault(); const t = insightFilterButtons.classList.toggle("active"), n = t ? "true" : "false"; insightFilterButtons.setAttribute("data-state", n), svgCloseIcon.classList.toggle("hidden", !t), svgFilterIcon.classList.toggle("hidden", t), filterBtnsContainer.classList.toggle("hidden", !t) } function createCardUI(e, t = "award", n = !1) { const a = document.createElement("article"); a.className = getClassName(t), a.setAttribute("data-category", e.categories), a.setAttribute("data-tags", e.tags), a.setAttribute("data-post-id", e.id); const s = e.post_date; return "newsletter" === t ? (a.setAttribute("data-nl_date", e.post_date), a.innerHTML = getNewsletterHTML(e, s)) : a.innerHTML = "news" === t ? getNewsHTML(e, s) : getAwardHTML(e, s), a } function getClassName(e) { switch (e) { case "award": return "awards_card_item"; case "newsletter": return "newsletter_post_item flex-col"; case "news": return "news_article_wrapper"; default: return "" } } function getImageHTML(e, t, n, a) { return `\n    <img decoding="async" width="${t}" height="${n}" class="${a}"\n      src="${sanitizeHTML(e.featured_image)}"\n      srcset="${sanitizeHTML(e.featured_image_small || e.featured_image)} 300w,\n              ${sanitizeHTML(e.featured_image_medium || e.featured_image)} 768w,\n              ${sanitizeHTML(e.featured_image_large || e.featured_image)} 1024w"\n      alt="${sanitizeHTML(decodeHTMLEntities(e.title))}">\n  ` } function getNewsletterHTML(e, t) { return `\n    <a href="${sanitizeHTML(e.url)}" rel="noopener noreferrer" aria-label="${sanitizeHTML(decodeHTMLEntities(e.title))}">\n      <div class="post-thumbnail">\n        ${getImageHTML(e, 286, 286, "")}\n        <time class="post-date" datetime="${sanitizeHTML(e.post_date)}">${t}</time>\n        <h2 class="post-title" title="${sanitizeHTML(decodeHTMLEntities(e.title))}">${sanitizeHTML(decodeHTMLEntities(e.title))}</h2>\n      </div>\n    </a>\n  ` } function getNewsHTML(e, t) { return `\n    <div class="news_card_image">\n      <a href="${sanitizeHTML(e.url)}" rel="noopener noreferrer" aria-label="${sanitizeHTML(decodeHTMLEntities(e.title))}" title="${sanitizeHTML(decodeHTMLEntities(e.title))}">\n        ${getImageHTML(e, 320, 320, "border-1")}\n      </a>\n    </div>\n    <div class="news_card_content">\n      <div class="newsevents__post_date">${t}</div>\n      <a href="${sanitizeHTML(e.url)}" rel="noopener noreferrer" aria-label="${sanitizeHTML(decodeHTMLEntities(e.title))}" title="${sanitizeHTML(decodeHTMLEntities(e.title))}">\n        <h2 class="newsevents__post_title fw-medium">${sanitizeHTML(decodeHTMLEntities(e.title))}</h2>\n      </a>\n    </div>\n  ` } function getAwardHTML(e, t) { return `\n    <a href="${sanitizeHTML(e.url)}" rel="noopener noreferrer" aria-label="${sanitizeHTML(decodeHTMLEntities(e.title))}">\n      ${getImageHTML(e, 300, 300, "awards_card_img")}\n      <div>\n        <div class="categ_date flex">\n          <div class="categ_lbl capitalize pr-2">${sanitizeHTML(decodeHTMLEntities(e.category_names))}</div>\n          <div class="date_posted text-gray-700 fw-light">${t}</div>\n        </div>\n        <div class="title">${sanitizeHTML(decodeHTMLEntities(e.title))}</div>\n      </div>\n    </a>\n  ` } function sanitizeHTML(e) { const t = document.createElement("div"); return t.textContent = e, t.innerHTML } function decodeHTMLEntities(e) { let t = document.createElement("textarea"), n = e, a = e; do { n = a, t.innerHTML = n, a = t.value } while (a !== n); return a } function highlightMatches(e, t) { const n = sanitizeHTML(e || ""), a = (t || "").trim(); if (!a) return n; const s = Array.from(new Set(a.split(/\s+/).filter((e => e.length >= 2)))); if (0 === s.length) return n; const i = `\\b(${s.map((e => escapeRegExp(e))).join("|")})\\b`, o = new RegExp(i, "gi"); return n.replace(o, "<strong>$1</strong>") } function escapeRegExp(e) { return e.replace(/[.*+?^${}()|[\]\\]/g, "\\$&") } function parseMultiValue(e) { if (Array.isArray(e)) return e; if ("string" == typeof e) { const t = e.trim(); return t ? t.includes(",") ? t.split(",").map((e => e.trim())).filter(Boolean) : t : null } return e } function resolveFilterTypeAndValue(e, t = {}) { const { filterType: n, filterValue: a } = t, s = void 0 !== n ? n : e.dataset.filterType ?? "", i = void 0 !== a ? a : e.dataset.filterValue ?? e.id ?? ""; return { type: parseMultiValue(s), value: parseMultiValue(i) } } function parseYearDecade(e) { if (!e) return null; const t = String(e).trim().toLowerCase(), n = t.match(/^(\d{4})$/); if (n) { const e = parseInt(n[1], 10); if (!isNaN(e)) return { start: e, end: e + 9 } } const a = t.match(/^(\d{4})\s*[-–]\s*(\d{4})$/); if (a) { const e = parseInt(a[1], 10), t = parseInt(a[2], 10); if (!isNaN(e) && !isNaN(t) && t >= e) return { start: e, end: t } } const s = t.match(/^(\d{4})$/); if (s) { const e = parseInt(s[1], 10), t = e - e % 10; return { start: t, end: t + 9 } } return null } function showLoadingState(e, t = "Loading...") { e.innerHTML = `\n        <div class="loading-state" style="grid-column: 1 / -1; text-align: center; padding: 2rem;">\n            <div class="spinner" style="border: 3px solid #f3f3f3; border-top: 3px solid hsl(358, 81%, 51%); border-radius: 50%; width: 40px; height: 40px; animation: spin 1s linear infinite; margin: 0 auto 1rem;"></div>\n            <p>${t}</p>\n            <style>\n                @keyframes spin {\n                    0% { transform: rotate(0deg); }\n                    100% { transform: rotate(360deg); }\n                }\n            </style>\n        </div>\n    ` } document.addEventListener("readystatechange", (e => { if ("complete" === e.target.readyState) { customHeaderNavigation(), initNewsletterPage(); const e = document.getElementById("all"); currentUrl.startsWith(origin + "/news") && e?.classList.add("active"); const t = document?.getElementById("hong-kong-law"); t?.classList.add("active"), window.location.pathname.includes("/news/newsletters/hong-kong-law-3/") && initLoadMoreWithFilters({ loadMoreBtnId: "newsletter-load-more-btn", loadingSpinnerId: ".loading-spinner", postsContainerId: "newsletters_post", ajaxAction: "load_more_newsletters", postsPerPage: 20, buttonSelector: ".newsletter_category_filter", isSearchEnabled: !0, searchInputId: "newsletterSearch", searchCloseButtonId: "nl_close_search", searchIconId: "nl_search_icon" }), window.location.pathname.includes("/our-firm/awards-2/") && initLoadMoreWithFilters({ loadMoreBtnId: "awards-load-more-btn", loadingSpinnerId: ".loading-spinner", postsContainerId: "all_awards_wrapper", ajaxAction: "load_more_content", postsPerPage: 20, buttonSelector: ".awards_btn_filter" }), window.location.pathname.includes("/webinars-and-podcasts/") && initLoadMoreWithFilters({ loadMoreBtnId: "webinars-load-more-btn", loadingSpinnerId: ".loading-spinner", postsContainerId: "pod-and-web", ajaxAction: "load_more_content", postsPerPage: 15, buttonSelector: ".pod_web_btn_filter" }), window.location.pathname.includes("/news/") && (loadNewsPagination(), initFilterButton({ buttonSelector: ".news_btn_tag_filter", onClickCallback: async ({ value: e }) => { const t = document.querySelector("#all_news_posts"); t && showLoadingState(t, "Loading filtered news..."); const n = document.querySelector(".news_pagination_btns_wrapper"); n && (n.innerHTML = ""); try { const n = await getNewsPostItems({ categories: ["news"], tags: "all" === e ? [] : [e], postsPerPage: 15, page: 1 }); t && (t.innerHTML = "", n && n.length > 0 ? n.forEach((e => { const n = document.createElement("article"); n.className = "news_article_wrapper", n.innerHTML = getNewsHTML(e, e.post_date), t.appendChild(n) })) : t.innerHTML = '<p class="no-posts-message">No posts found for this filter.</p>'), await activatePagination({ categories: ["news"], tags: "all" === e ? null : [e], postsPerPage: 15, postsContainer: "#all_news_posts", paginationWrapper: ".news_pagination_btns_wrapper" }) } catch (e) { console.error("Error fetching filtered posts:", e), t && (t.innerHTML = '<p class="error-message">Error loading posts. Please try again.</p>') } } })) } })), window.fetchCategoryIds = async function (e) { const t = []; for (const n of e) try { const e = `${window.origin}/wp-json/wp/v2/categories?slug=${n}`, a = await fetch(e); if (!a.ok) { console.warn(`Failed to fetch category '${n}': ${a.status} ${a.statusText}`); continue } const s = await a.json(); if (!Array.isArray(s) || 0 === s.length) { console.warn(`Category '${n}' not found`); continue } t.push(s[0].id) } catch (e) { console.warn(`Error fetching category '${n}':`, e) } return t }, window.fetchTagIds = async function (e) { const t = []; for (const n of e) try { const e = `${window.origin}/wp-json/wp/v2/tags?slug=${n}`, a = await fetch(e); if (!a.ok) { console.warn(`Failed to fetch tag '${n}': ${a.status} ${a.statusText}`); continue } const s = await a.json(); if (!Array.isArray(s) || 0 === s.length) { console.warn(`Tag '${n}' not found`); continue } t.push(s[0].id) } catch (e) { console.warn(`Error fetching tag '${n}':`, e) } return t }; let currentFilterID = null, postsPerPage = 15, currentPage = 1; const SELECTORS = { allNewsPosts: "#all_news_posts", cardsPosts: ".news_article_wrapper", paginationWrapper: "#news_pagination_btns_wrapper", prevBtn: "#prev_post_btn", nextBtn: "#next_post_btn", firstBtn: "#first_post_btn", lastBtn: "#last_post_btn", newsEventsFilterButtons: ".news_btn_tag_filter", awardsFilterButton: ".awards_btn_filter", newsHiddenInput: ".newsevents_hidden_input", CategPPWFilterButtons: ".ppw_category_filter", TagsPPWFilterButtons: ".ppw_tag_btn_filter", paginationdots_first: "#ne_pagination_dots_first", paginationdots_last: "#ne_pagination_dots", podAndWebinarFilterButtons: ".pod_web_btn_filter", NewsletterAchiveFilter: ".archive_btn_filter" }, buttonSVG = document.querySelectorAll(".arrow_right_svg_plus_icon"); buttonSVG.forEach((e => { e.addEventListener("click", (() => { e.classList.toggle("active"); const t = e.closest(".services_list_item"); if (t) { const e = t.querySelector(".sub_services_list"); e && e.classList.toggle("active") } })) })); const insightFilterButtons = document.getElementById("insights_filter_toggle"), svgFilterIcon = document.getElementById("insights_filter_icon"), svgCloseIcon = document.getElementById("insights_filter_close_icon"), filterBtnsContainer = document.querySelector(".insights_page.btn_tag_filter_wrapper"), ppwArticlesPost = Array.from(document.querySelectorAll(".insights_post_title_wrapper")), articlePostContainers = document.querySelectorAll(".articles_wrapper"); function filterByCategoryOrTag(e, t) { document.querySelectorAll("category" === t ? ".ppw_tag_btn_filter" : ".ppw_category_filter").forEach((e => e.classList.remove("active"))), articlePostContainers.forEach((e => e.innerHTML = "")), ppwArticlesPost.forEach((n => { const a = n.dataset.category ? n.dataset.category.split(",").map((e => e.trim())) : [], s = n.dataset.tags ? n.dataset.tags.split(",").map((e => e.trim())) : [], i = n.dataset.year; ("category" === t ? !e || a.includes(e) : !e || s.includes(e)) && articlePostContainers.forEach((e => { e.id === i && e.appendChild(n) })) })), articlePostContainers.forEach((e => { const t = e.closest(".insights_yearly_wrapper"); 0 === e.children.length ? (t.classList.remove("flex"), t.classList.add("d-none")) : (t.classList.add("flex"), t.classList.remove("d-none")) })) } function initNewsletterPage() { const e = document.querySelector(".single_post_content_wrapper"), t = document?.getElementById("read_time_est"); if (e && t) { const n = e.innerText.trim().split(/\s+/).length; t.innerText = `${Math.ceil(n / 200)} minute read` } else console.warn("Wrapper or read time element not found!"); const n = (e, t) => { if (!e) return console.error(t); const n = Object.assign(document.createElement("a"), { href: e, target: "_blank" }); document.body.appendChild(n).click(), document.body.removeChild(n) }, a = document?.getElementById("open_dl_options"), s = document?.getElementById("nlDowloadOptions"), i = document?.getElementById("dl_pdf"), o = document?.getElementById("dl_word"), r = document?.getElementById("pdf_url_hidden_input"), l = document?.getElementById("word_url_hidden_input"), c = r ? r.value : null, d = l ? l.value : null; a?.addEventListener("click", (() => u(s))); const u = e => { const t = e.classList.toggle("open"); e.setAttribute("aria-hidden", !t); const n = t => { e.contains(t.target) || a.contains(t.target) || (e.classList.remove("open"), e.setAttribute("aria-hidden", "true"), document.removeEventListener("click", n)) }; t ? document.addEventListener("click", n) : document.removeEventListener("click", n) }; i?.addEventListener("click", (() => { n(c, "PDF URL is not available."), s.classList.remove("open") })), o?.addEventListener("click", (() => { n(d, "Word URL is not available."), s.classList.remove("open") })); const p = document.querySelectorAll(".share_btn"); p.forEach((e => { e.addEventListener("click", (t => { t.stopPropagation(), (e => { const t = document.getElementById("nlShareOptions"), n = t => { const a = document.getElementById("nlShareOptions"); !a || a.contains(t.target) || e.contains(t.target) || (a.remove(), e.setAttribute("data-dialog", "close"), e.classList.remove("open"), document.removeEventListener("click", n)) }; t ? (t.remove(), e.setAttribute("data-dialog", "close"), e.classList.remove("open"), document.removeEventListener("click", n)) : (e.insertAdjacentHTML("afterend", '   \n    <div id="nlShareOptions">\n    <ul>\n        <li>\n            <button>\n                <div class="flex gap-1 items-center">\n                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none"\n                        viewBox="0 0 24 24">\n                        <path fill="#5f6368" fill-rule="evenodd"\n                            d="m12.505 9.678.59-.59a5 5 0 0 1 1.027 7.862l-2.829 2.83a5 5 0 0 1-7.07-7.072l2.382-2.383q.002.646.117 1.298l-1.793 1.792a4 4 0 0 0 5.657 5.657l2.828-2.828a4 4 0 0 0-1.046-6.411q.063-.081.137-.155m-1.01 4.646-.589.59a5 5 0 0 1-1.027-7.862l2.828-2.83a5 5 0 0 1 7.071 7.072l-2.382 2.383a7.7 7.7 0 0 0-.117-1.297l1.792-1.793a4 4 0 1 0-5.657-5.657l-2.828 2.828a4 4 0 0 0 1.047 6.411 2 2 0 0 1-.138.155"\n                            clip-rule="evenodd"></path>\n                    </svg>\n                    <div>Copy link</div>\n                </div>\n            </button>\n        </li>\n        <li>\n            <button aria-label="Share on linkedin" class="flex gap-1 items-center">\n                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none"\n                    viewBox="0 0 24 24" class="cg aoi">\n                    <path fill="#5f6368"\n                        d="M21 4.324v15.352A1.324 1.324 0 0 1 19.676 21H4.324A1.324 1.324 0 0 1 3 19.676V4.324A1.324 1.324 0 0 1 4.324 3h15.352A1.324 1.324 0 0 1 21 4.324M8.295 9.886H5.648v8.478h2.636V9.886zm.221-2.914a1.52 1.52 0 0 0-1.51-1.533H6.96a1.533 1.533 0 0 0 0 3.066 1.52 1.52 0 0 0 1.556-1.487zm9.825 6.236c0-2.555-1.626-3.542-3.229-3.542a3.02 3.02 0 0 0-2.67 1.37h-.082V9.875H9.875v8.477h2.648v-4.494a1.754 1.754 0 0 1 1.579-1.893h.104c.837 0 1.464.523 1.464 1.858v4.54h2.647l.024-5.144z">\n                    </path>\n                </svg>\n                <div class="ca hq">Share on LinkedIn</div>\n            </button>\n        </li>\n        <li>\n            <button aria-label="Share on twitter" class="flex gap-1 items-center">\n                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none"\n                    viewBox="0 0 24 24" class="cg aoi">\n                    <path fill="#5f6368"\n                        d="M13.346 10.932 18.88 4.5h-1.311l-4.805 5.585L8.926 4.5H4.5l5.803 8.446L4.5 19.69h1.311l5.074-5.898 4.053 5.898h4.426zM11.55 13.02l-.588-.84-4.678-6.693h2.014l3.776 5.4.588.842 4.907 7.02h-2.014z">\n                    </path>\n                </svg>\n                <div>Share on X</div>\n            </button>\n        </li>\n        <li>\n            <button aria-label="Share on facebook" class="flex gap-1 items-center">\n                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none"\n                    viewBox="0 0 24 24" class="cg aoi">\n                    <path fill="#5f6368"\n                        d="M22 12.061C22 6.505 17.523 2 12 2S2 6.505 2 12.061c0 5.022 3.657 9.184 8.438 9.939v-7.03h-2.54V12.06h2.54V9.845c0-2.522 1.492-3.915 3.777-3.915 1.094 0 2.238.197 2.238.197v2.476h-1.26c-1.243 0-1.63.775-1.63 1.57v1.888h2.773l-.443 2.908h-2.33V22c4.78-.755 8.437-4.917 8.437-9.939">\n                    </path>\n                </svg>\n                <div>Share on Facebook</div>\n            </button>\n        </li>\n    </ul>\n    </div>\n    '), e.nextElementSibling.classList.add("open"), e.setAttribute("data-dialog", "open"), e.classList.add("open"), document.querySelectorAll("#nlShareOptions button").forEach((e => { const t = g[e.textContent.trim()]; t && e.addEventListener("click", (() => { m(t), p.forEach((e => { e.setAttribute("data-dialog", "close"), e.classList.remove("open") })) })) })), document.addEventListener("click", n)) })(e) })) })); const g = { "Copy link": "copy", "Share on LinkedIn": "https://www.linkedin.com/shareArticle?url=", "Share on X": "https://twitter.com/intent/tweet?url=", "Share on Facebook": "https://www.facebook.com/sharer/sharer.php?u=" }, m = e => { const t = window.location.href; "copy" === e ? navigator.clipboard.writeText(t).then((() => { const e = Object.assign(document.createElement("div"), { textContent: "URL copied to clipboard!", style: "position: absolute; top: 80%; left: 50%; transform: translate(-50%, -50%); background-color: black; color: white; padding: 10px; border-radius: 5px; z-index: 900;" }); document.body.appendChild(e), setTimeout((() => document.body.removeChild(e)), 2e3) })) : "mailto" === e ? window.location.href = `mailto:?subject=${encodeURIComponent("Check out this page")}&body=${encodeURIComponent(`I found this interesting: ${t}`)}` : window.open(e + encodeURIComponent(t), "_blank"); const n = document.getElementById("nlShareOptions"); n && n.remove() } } FilterButton.initializeAll(SELECTORS.TagsPPWFilterButtons, (e => { filterByCategoryOrTag("all" === e ? null : e, "tag") })), FilterButton.initializeAll(SELECTORS.CategPPWFilterButtons, (e => { filterByCategoryOrTag("all" === e ? null : e, "category") })), insightFilterButtons?.addEventListener("click", toggleFilter); const sectionTextContent = [...document.querySelectorAll(".profile_content_section")]; let options = { threshold: [0, .3], rootMargin: "-250px 0px -70% 0px" }; const handleIntersection = (e, t) => { e.forEach((e => { const t = e.target, n = document.querySelectorAll(".profile_bio_nav_item .profile_bio_nav_item_label"); (t === sectionTextContent[sectionTextContent.length - 1] ? e.isIntersecting && e.intersectionRatio > 0 : e.isIntersecting) && n.forEach((e => { e.getAttribute("data-id") === t.id ? e.parentNode.classList.add("active") : e.parentNode.classList.remove("active") })) })) }, observeProfileContent = new IntersectionObserver(handleIntersection, options); sectionTextContent.forEach((e => { observeProfileContent.observe(e) })); const stickyNav = document?.querySelector(".lawyer_profile_section_nav"), navLinks = document?.querySelectorAll(".profile_bio_nav_item .profile_bio_nav_item_label"), dropdownShowLink = document?.querySelectorAll(".material-symbols-outlined"); navLinks.forEach((e => { e.addEventListener("click", (function (e) { e.preventDefault(); const t = this.getAttribute("data-id"), n = document.getElementById(t); if (n) { const e = stickyNav ? stickyNav.offsetHeight : 0, t = 90, a = n.getBoundingClientRect().top + window.scrollY - e - t; window.scrollTo({ top: a, behavior: "smooth" }), window.innerWidth <= 767 && (navLinks.forEach((e => { e.parentNode.classList.remove("active"), e.parentNode.style.display = "none" })), this.parentNode.classList.add("active")) } })) })), dropdownShowLink.forEach((e => { e.addEventListener("click", (function (e) { e.preventDefault(); const t = this.closest(".profile_bio_nav_item"); if (t) { const e = t.nextElementSibling, n = t.previousElementSibling; e && (e.style.display = "flex" === e.style.display ? "none" : "flex"), n && (n.style.display = "flex" === n.style.display ? "none" : "flex") } })) })); const expandMoreBtn = document?.querySelectorAll(".expand_more .material-symbols-outlined"); expandMoreBtn.forEach((e => { e.addEventListener("click", (function (e) { e.preventDefault(); const t = this.closest("details"); t && (t.hasAttribute("open") ? t.removeAttribute("open") : t.setAttribute("open", "")) })) })), window.location.pathname.includes("/webinars-and-podcasts/") || document.getElementById("webinars-load-more-btn") || FilterButton.initializeAll(SELECTORS.podAndWebinarFilterButtons, (e => { currentFilterID = "all" === e ? null : e, getPodcastsAndWebinars(["webinars-and-podcasts", "webinars"], currentFilterID) })); const hamburgerMenuBtn = document?.querySelector(".nav_trail_active .hamburger"), aboutUsUlNav = document?.getElementById("about_us_nav"), aboutUsNavUlMobile = document?.getElementById("about_us_ul_nav_mobile"); function createUITable(e, t) { const n = document.createElement("table"); return n.className = "archive_table", n.setAttribute("data-archive-category", t[0] || ""), Object.keys(e).sort(((e, t) => t - e)).forEach((t => { const a = document.createElement("thead"); a.setAttribute("data-archive-year-head", t); const s = document.createElement("tr"), i = document.createElement("th"); i.colSpan = 2, i.innerHTML = `\n            <div>\n                <span class="material-symbols-outlined">calendar_month</span>\n                <span class="label_thead">${t}</span>\n            </div>\n        `, s.appendChild(i), a.appendChild(s), n.appendChild(a); const o = document.createElement("tbody"); o.setAttribute("data-archive-year-body", t), e[t].forEach((e => { const t = document.createElement("tr"); t.setAttribute("data-archive-post-content", e.post_date), t.setAttribute("data-archive-post-category", e.categories.toLowerCase()); const [n, a, s] = e.post_date.split(" "), i = new Date(`${n} ${a} ${s}`), r = `${i.getDate()} ${i.toLocaleString("en-US", { month: "short" })}`, l = document.createElement("td"); l.textContent = r; const c = document.createElement("td"), d = document.createElement("a"); d.href = e.url || "#", d.className = "default_link", d.target = "_blank", d.textContent = decodeHTMLEntities(e.title), c.appendChild(d), t.appendChild(l), t.appendChild(c), o.appendChild(t) })), n.appendChild(o) })), n } function initSearchFeature(e) { const { inputId: t, closeButtonId: n = null, iconId: a = null, minChars: s = 2, debounceMs: i = 500, onSearch: o, onClear: r } = e || {}, l = t ? document.getElementById(t) : null, c = n ? document.getElementById(n) : null, d = a ? document.getElementById(a) : null; if (!l) return; let u; l.addEventListener("input", (e => { const t = (e.target.value || "").trim(); c && c.classList.toggle("active", t.length >= s), d && (d.style.display = t.length >= s ? "none" : "flex"), clearTimeout(u), u = setTimeout((() => { t.length >= s ? "function" == typeof o && o(t) : 0 === t.length && "function" == typeof r && r() }), i) })), c && c.addEventListener("click", (() => { l.value = "", c.classList.remove("active"), d && (d.style.display = "flex"), "function" == typeof r && r() })) } function initFilterButton(e) { const { buttonSelector: t, filterType: n, filterValue: a, activeClass: s = "active", onClickCallback: i } = e || {}, o = document?.querySelectorAll(t); o && 0 !== o.length && o.forEach((e => { e.addEventListener("click", (t => { t.preventDefault(), o.forEach((e => e.classList.remove(s))), e.classList.add(s); const { type: r, value: l } = resolveFilterTypeAndValue(e, { filterType: n, filterValue: a }); "function" == typeof i && i({ type: r, value: l, button: e, event: t }) })) })) } function initLoadMoreWithFilters(e) { const { loadMoreBtnId: t, loadingSpinnerId: n = ".loading-spinner", postsContainerId: a, ajaxAction: s, postsPerPage: i = 20, buttonSelector: o, filterOnClickCallback: r, isSearchEnabled: l = !1, searchInputId: c, searchCloseButtonId: d = null, searchIconId: u = null, searchMinChars: p = 2, searchDebounceMs: g = 500, ajaxActionSearch: m = "global_search" } = e || {}, h = document.getElementById(t), f = document.querySelector(n), _ = document.getElementById(a); if (!h || !_) return void console.warn("Load more functionality not initialized: missing elements"); l && initSearchFeature({ inputId: c, closeButtonId: d, iconId: u, minChars: p, debounceMs: g, onSearch: e => { _.innerHTML = "", h.style.display = "none", f && (f.style.display = "block"), function (e) { const t = h.dataset.postType || void 0, n = (h.dataset.category || "").trim(), a = n.toLowerCase(), s = (h.dataset.tags || "").trim(), i = n && "all" !== a ? n : null; let o = null; if (s) { if ("all" !== s.toLowerCase()) { const e = s.split(",").map((e => e.trim())).filter(Boolean); o = e.length ? e : null } } const r = { action: m, posts_per_page: 4, limit: 4, s: e, query: e, search: e }; t && (r.post_type = t); i && (r.category = i, r.categories = i, r.category_name = i, r.filter_category = i); if (o && o.length) { const e = o.join(","); r.tag = e, r.tags = e, r.filter_tag = e, r.filter_tags = e } fetch(ajax_object.ajax_url, { method: "POST", headers: { "Content-Type": "application/x-www-form-urlencoded" }, body: new URLSearchParams(r) }).then((e => e.json())).then((e => { _.innerHTML = "", e && Array.isArray(e.data) && e.data.length > 0 ? (e.data.forEach((e => { const t = `\n                                <article class="newsletter_post_item flex-col"\n                                         data-category="${sanitizeHTML(e.categories || "")}"\n                                         data-tags="${sanitizeHTML(e.tags || "")}"\n                                         data-nl_date="${sanitizeHTML(e.post_date || "")}"\n                                         data-post-id="${sanitizeHTML(e.id || "")}">\n                                    <a href="${sanitizeHTML(e.url || "#")}"\n                                       rel="noopener noreferrer"\n                                       aria-label="${sanitizeHTML(decodeHTMLEntities(e.title || ""))}">\n                                        <div class="post-thumbnail">\n                                            ${e.featured_image ? `\n                                                <img decoding="async" width="286" height="286" class=""\n                                                     src="${sanitizeHTML(e.featured_image)}"\n                                                     alt="${sanitizeHTML(decodeHTMLEntities(e.title || ""))}">\n                                            ` : ""}\n                                            <time class="post-date" datetime="${sanitizeHTML(e.post_date || "")}">\n                                                ${sanitizeHTML(e.post_date || "")}\n                                            </time>\n                                            <h2 class="post-title"\n                                                title="${sanitizeHTML(decodeHTMLEntities(e.title || ""))}">\n                                                ${sanitizeHTML(decodeHTMLEntities(e.title || ""))}\n                                            </h2>\n                                        </div>\n                                    </a>\n                                </article>\n                            `; _.insertAdjacentHTML("beforeend", t) })), h.style.display = "none") : (_.innerHTML = "<p>No results found.</p>", h.style.display = "none") })).catch((e => { console.error("Error performing search:", e), h.style.display = "none" })).finally((() => { f && (f.style.display = "none") })) }(e) }, onClear: () => { const e = (h.dataset.category || "").trim(), t = (h.dataset.tags || "").trim(), n = (h.dataset.yearStart || "").trim(), a = (h.dataset.yearEnd || "").trim(), s = e && "all" !== e ? e : null, i = t ? t.split(",").map((e => e.trim())).filter(Boolean) : null, o = n ? parseInt(n, 10) : null, r = a ? parseInt(a, 10) : null; h.dataset.offset = "0", _.innerHTML = "", f && (f.style.display = "block"), w(s, 0, i, o, r) } }); function w(e, t, n, a, o) { const r = h.dataset.postType || "project", l = h.dataset.callback || null, c = { action: s, offset: t, post_type: r, posts_per_page: i }; if (e && (c.category = e, c.filter_category = e, c.category_name = e), n && n.length) { const e = n.join(","); c.tag = e, c.tags = e, c.filter_tag = e, c.filter_tags = e } if (Number.isInteger(a) && (c.year_start = a, c.filter_year_start = a), Number.isInteger(o) && (c.year_end = o, c.filter_year_end = o), Number.isInteger(a) && Number.isInteger(o)) { const e = `${a}-${o}`; c.year_range = e, c.years = e } l && (c.callback = l), fetch(ajax_object.ajax_url, { method: "POST", headers: { "Content-Type": "application/x-www-form-urlencoded" }, body: new URLSearchParams(c) }).then((e => e.json())).then((e => { e.success ? (_.insertAdjacentHTML("beforeend", e.data.content), h.dataset.offset = e.data.next_offset, h.style.display = e.data.has_more ? "block" : "none") : (console.error("Error:", e.data), h.style.display = "none") })).catch((e => { console.error("Error loading more posts:", e), h.style.display = "block" })).finally((() => { f && (f.style.display = "none") })) } o && initFilterButton({ buttonSelector: o, onClickCallback: e => { const t = (e => { if (!e) return null; const t = (Array.isArray(e) ? e[0] || "" : String(e)).trim().toLowerCase(); return "category" === t || "categories" === t ? "category" : "tag" === t || "tags" === t ? "tag" : t || null })(e?.type), n = (Array.isArray(e?.value) ? e.value : e?.value ? [e.value] : []).map((e => (e || "").toString().trim())).filter(Boolean); let a = null, s = [], i = null, o = null; if ("category" === t) a = n.length ? n[0] : null; else if ("tag" === t) s = n.length ? n : []; else if ("years" === t) { const e = n.length ? n[0] : null, t = e ? parseYearDecade(String(e)) : null; t && (i = t.start, o = t.end), s = ["awards"] } else a = n.length ? n[0] : null; const l = 0 === n.length || "all" === n[0]; h.dataset.category = l ? "" : a || "", h.dataset.tags = l ? "" : s.length ? Array.from(new Set(s)).join(",") : "", h.dataset.yearStart = l ? "" : i ?? "", h.dataset.yearEnd = l ? "" : o ?? "", h.dataset.offset = "0", _.innerHTML = "", h.style.display = "none", f && (f.style.display = "block"), w(l ? null : a || null, 0, l ? null : s.length ? Array.from(new Set(s)) : null, l ? null : i ?? null, l ? null : o ?? null), "function" == typeof r && r(e) } }), h.addEventListener("click", (function () { const e = parseInt(this.dataset.offset || "0", 10), t = (this.dataset.category || "").trim(), n = (this.dataset.tags || "").trim(), a = (this.dataset.yearStart || "").trim(), s = (this.dataset.yearEnd || "").trim(), i = t && "all" !== t ? t : null, o = n ? n.split(",").map((e => e.trim())).filter(Boolean) : null, r = a ? parseInt(a, 10) : null, l = s ? parseInt(s, 10) : null; h.style.display = "none", f && (f.style.display = "block"), w(i, e, o, r, l) })) } function loadNewsPagination() { if (document.getElementById("all_news_posts")) try { setTimeout((() => { console.log("Initializing news pagination after delay..."), loadInitialNewsPostsAndPagination() }), 500) } catch (e) { console.error("Error setting up delayed pagination:", e) } } async function loadInitialNewsPostsAndPagination() { const e = document.querySelector("#all_news_posts"); if (e) try { const t = e.querySelectorAll(".news_article_wrapper"); if (t.length > 0) return void await activatePagination({ categories: ["news"], tags: null, postsPerPage: 15, postsContainer: "#all_news_posts", paginationWrapper: ".news_pagination_btns_wrapper" }); e.innerHTML = '<div class="loading-indicator">Loading news posts...</div>'; const n = await getNewsPostItems({ categories: ["news"], tags: [], postsPerPage: 15, page: 1 }); e.innerHTML = "", n && n.length > 0 ? n.forEach((t => { const n = document.createElement("article"); n.className = "news_article_wrapper", n.innerHTML = getNewsHTML(t, t.post_date), e.appendChild(n) })) : e.innerHTML = '<p class="no-posts-message">No news posts found.</p>', await activatePagination({ categories: ["news"], tags: null, postsPerPage: 15, postsContainer: "#all_news_posts", paginationWrapper: ".news_pagination_btns_wrapper" }) } catch (t) { console.error("Error loading initial news posts:", t), e && (e.innerHTML = '<p class="error-message">Error loading news posts. Please try again.</p>') } else console.warn("News posts container not found") } async function activatePagination(e = {}) { const { categories: t = "news", tags: n = null, postsPerPage: a = 15, postsContainer: s = "#all_news_posts", paginationWrapper: i = ".news_pagination_btns_wrapper", paginationBtnClass: o = "pagination_btn", activeBtnClass: r = "active" } = e, l = document.querySelector(i); if (l && l.querySelector(`.${o}`)) { const e = window.currentPaginationTags, t = n ? Array.isArray(n) ? n : [n] : null; if (!(JSON.stringify(e) !== JSON.stringify(t))) return } window.currentPaginationTags = n ? Array.isArray(n) ? n : [n] : null, window.currentPaginationCategories = Array.isArray(t) ? t : [t]; const c = { POSTS_PER_PAGE: a, INITIAL_PAGE: 1, CATEGORIES: Array.isArray(t) ? t : [t], TAGS: n ? Array.isArray(n) ? n : [n] : null, SELECTORS: { POSTS_CONTAINER: s, PAGINATION_WRAPPER: i }, CSS_CLASSES: { PAGINATION_BTN: o, ACTIVE_BTN: r } }, { postsContainer: d, paginationWrapper: u } = (p = c.SELECTORS, { postsContainer: document.querySelector(p.POSTS_CONTAINER), paginationWrapper: document.querySelector(p.PAGINATION_WRAPPER) }); var p; if (!d || !u) return void console.warn("Pagination not activated: Required DOM elements not found"); let g = c.INITIAL_PAGE; try { const e = await window.fetchCategoryIds(c.CATEGORIES), t = c.TAGS ? await window.fetchTagIds(c.TAGS) : null, n = await async function (e, t = null) { let n = `${window.origin}/wp-json/wp/v2/posts?per_page=1`; e.length > 0 && (n += `&categories=${e.join(",")}`); t && t.length > 0 && (n += `&tags=${t.join(",")}`); const a = await fetch(n); if (!a.ok) throw new Error(`Failed to fetch posts count: ${a.status} ${a.statusText}`); const s = parseInt(a.headers.get("X-WP-Total"), 10); if (isNaN(s) || s < 0) throw new Error("Invalid total posts count received from API"); return s }(e, t), a = Math.ceil(n / c.POSTS_PER_PAGE); window.paginationTotalPages = a, m(u, a, g, c.CSS_CLASSES) } catch (e) { console.error("Failed to activate pagination:", e.message), u.innerHTML = '<p class="pagination-error">Unable to load pagination. Please refresh the page.</p>' } function m(e, t, n, a) { if (e.innerHTML = "", t <= 5) { for (let s = 1; s <= t; s++) { const t = h(s, n, a); e.appendChild(t) } return } let s, i; if (n <= 3 ? (s = 1, i = 5) : n >= t - 2 ? (s = t - 5 + 1, i = t) : (s = n - 2, i = n + 2), n > 1) { const t = f("Previous", n - 1, a); e.appendChild(t) } if (s > 1) { const t = h(1, n, a); if (e.appendChild(t), s > 2) { const t = _(); e.appendChild(t) } } for (let t = s; t <= i; t++) { const s = h(t, n, a); e.appendChild(s) } if (i < t) { if (i < t - 1) { const t = _(); e.appendChild(t) } const s = h(t, n, a); e.appendChild(s) } if (n < t) { const t = f("Next", n + 1, a); e.appendChild(t) } } function h(e, t, n) { const a = document.createElement("button"); return a.className = n.PAGINATION_BTN, a.type = "button", a.textContent = e, a.setAttribute("aria-label", `Go to page ${e}`), e === t && (a.classList.add(n.ACTIVE_BTN), a.setAttribute("aria-current", "page")), a.addEventListener("click", (() => w(e))), a } function f(e, t, n) { const a = document.createElement("button"); return a.className = `${n.PAGINATION_BTN} pagination_nav_btn`, a.type = "button", a.textContent = e, a.setAttribute("aria-label", `${e} page`), a.addEventListener("click", (() => w(t))), a } function _() { const e = document.createElement("span"); return e.className = "pagination_dots", e.textContent = "...", e.setAttribute("aria-hidden", "true"), e } async function w(e) { if (e !== g) { g = e, function (e, t, n) { const a = window.paginationTotalPages || Math.ceil(15 / c.POSTS_PER_PAGE); m(e, a, t, n) }(u, e, c.CSS_CLASSES), showLoadingState(d, "Loading News..."); try { const t = await getNewsPostItems({ categories: c.CATEGORIES, tags: c.TAGS, postsPerPage: c.POSTS_PER_PAGE, page: e }); !function (e, t) { if (e.innerHTML = "", !t || 0 === t.length) return void (e.innerHTML = '<p class="no-posts-message">No posts found.</p>'); t.forEach((t => { const n = document.createElement("article"); n.className = "news_article_wrapper", n.innerHTML = getNewsHTML(t, t.post_date), e.appendChild(n) })) }(d, t) } catch (t) { console.error(`Failed to load page ${e}:`, t.message), function (e) { e.innerHTML = '\n            <div class="error-state" style="grid-column: 1 / -1; text-align: center; padding: 2rem; color: #e74c3c;">\n                <p>Failed to load posts. Please try again.</p>\n                <button onclick="location.reload()" style="margin-top: 1rem; padding: 0.5rem 1rem; background: #e74c3c; color: white; border: none; border-radius: 4px; cursor: pointer;">\n                    Refresh Page\n                </button>\n            </div>\n        ' }(d) } } } } hamburgerMenuBtn?.addEventListener("click", (() => { const e = (e, t) => e?.classList.toggle(t); e(aboutUsUlNav, "about_us_active"), e(aboutUsNavUlMobile, "dropdown_active"), e(hamburgerMenuBtn, "active"); const t = aboutUsNavUlMobile?.classList.contains("dropdown_active") ? "false" : "true"; aboutUsNavUlMobile?.setAttribute("aria-hidden", t) })), FilterButton.initializeAll(SELECTORS.NewsletterAchiveFilter, (e => { currentFilterID = "all" === e ? null : e, getArchivedAllPosts([currentFilterID]) }));