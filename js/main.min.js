import FilterButton from "./FilterButton.js"; function loadOptionUrl() { window.location = document.getElementById("option-url").value } jQuery(document).ready((function (e) { e(".right-thumb-content.toggle-thumbs .rtc-title, .view-all-toggle").click((function () { e(this).siblings().not(".rtc-image:nth-of-type(1)").not(".toggle-thumbs .rtc-title").not(".toggle-thumbs .view-all-toggle").toggle(), e(this).siblings(".rtc-image:nth-of-type(2)").is(":hidden") ? (e(this).parent().children(".view-all-toggle").text("view more"), e(this).parent().children(".rtc-title").removeClass("h-shown").addClass("h-hidden")) : (e(this).parent().children(".view-all-toggle").text("view less"), e(this).parent().children(".rtc-title").removeClass("h-hidden").addClass("h-shown")) })); var t = e(window).width(); t > 979 && (e("nav.page-menu-items ul li").click((function () { e("nav.page-menu-items ul li ul").toggle() })), e("nav.page-menu-items ul li").click((function () { }))), t < 979 && (e(".page-menu-panel .hamburger").click((function () { e(".page-menu-items").toggle() })), e(".page-menu-section li.has-children").append("<span>+</span>"), e(".page-menu-section li.has-children").click((function () { e(".page-menu-section li.has-children").not(this).find("ul").hide(), e(this).find("ul").slideToggle() }))); var n = e(this); if (n.width() >= 979 && (e("nav.page-menu-items ul li").click((function () { e("nav.page-menu-items ul li ul").toggle() })), e("nav.page-menu-items ul li").click((function () { }))), e(".content-menubar > ul > li > ul > li.page_item_has_children").append("<span>+</span>"), n.width() <= 979 && (e(".page-menu-panel .hamburger").click((function () { e(".content-menubar ul.cm-parent").slideToggle() })), e(".content-menubar > ul > li.page_item_has_children").append("<span>+</span>"), e("ul.cm-parent > li.page_item_has_children").click((function () { e(this).children("ul").slideToggle() })), e("ul.cm-parent > li.page_item_has_children > ul > li.page_item_has_children").click((function () { e("ul.cm-parent > li.page_item_has_children").children("ul").hide(), e(this).children("ul").slideToggle() }))), n.width() >= 979) { e(".content-menubar > ul > li > ul > li.page_item_has_children").click((function () { e(this).parent().hasClass("open") ? e(this).parent().removeClass("open") : e(this).parent().addClass("open"), e(".content-menubar ul li ul li.page_item_has_children").not(this).find("ul").hide(), e(this).find("ul").slideToggle() })); e(".content-menubar ul.cm-parent > li").each((function () { e(this).hasClass("page_item_has_children") || e(this).append('<ul class="children"></ul>') })), e(".content-menubar ul.cm-parent > li > a").each((function () { var t = e(this).text(); e(this).text("").prepend("<span>" + t + "</span>") })); var s = -1; e(".content-menubar ul.cm-parent li ul.children").each((function () { e(this).height() > s && (s = e(this).height()) })), e(".content-menubar > ul.cm-parent").mouseenter((function () { e(".content-menubar > ul.cm-parent > li > ul").css("visibility", "visible"); e(".content-menubar > ul > li > ul > li.page_item_has_children span").click((function () { e(".content-menubar > ul.cm-parent > li > ul").toggleClass("menubarHeightAutoClass") })), e(".content-menubar ul.children li.page-item-221953").css("display", "none") })), e(".content-menubar ul.cm-parent").mouseleave((function () { e(".content-menubar > ul.cm-parent > li > ul").css("visibility", "hidden") })) } e(".content-wrapper15").length && e(window).scroll((function () { e(".content-wrapper15 div.et_pb_row.et_pb_row_0").offset().top; var t = e(".content-wrapper15 div.et_pb_row.et_pb_row_0").offset().top + e(".content-wrapper15 div.et_pb_row.et_pb_row_0").outerHeight(), n = e(".float-anchor-menu").offset().top; e(".float-anchor-menu").offset().top, e(".float-anchor-menu").outerHeight(); e("section").each((function () { var t = e(this).offset().top, s = e(this).offset().top + e(this).outerHeight(); t < n && s > n && (e(".float-anchor-menu li a").parent().removeClass("active"), e('.float-anchor-menu li a[href="#' + e(this).attr("id") + '"]').parent().addClass("active"), e(".float-anchor-menu").removeClass("expand-float-menu").addClass("collapse-float-menu")) })), n < t && (e(".float-anchor-menu li a").parent().removeClass("active"), e(".float-anchor-menu").addClass("expand-float-menu")) })), e(".cat-271-id .insights-table a, .page-id-16470 td a").click((function () { e(this).attr("target", "_blank") })), e(".smap-node > ul li ul").hide(), e(".smap-node > ul li.page_item_has_children").click((function () { e(this).find("ul").slideToggle() })), e("#newsletter-go").click((function () { e(".newsletter-search").submit() })) })); const currentUrl = window.location.href, origin = window.location.origin; function customHeaderNavigation() { const e = document.querySelector("header"), t = document.querySelector(".mobile_nav_show"); if (e && t) { const n = e.offsetHeight; window.addEventListener("resize", (e => { t.style.top = `${n}px` })), t.style.top = `${n}px` } const n = document.querySelectorAll(".nav_parent_list_item"), s = document.querySelectorAll(".nav_child_list_item .btn_wrapper button"), a = document?.querySelectorAll(".grandchild_ul"), o = document.querySelectorAll(".post_wrapper"); let i = [], r = null; n.forEach((e => { const t = e.getAttribute("data-parentlistid"), n = e?.querySelector(".submenu_wrapper"), s = n?.querySelectorAll(".nav_child_list_item button"); e.addEventListener("mouseenter", (() => { if (t === n?.id) { const e = n.querySelectorAll(".nav_child_list_item"); n.querySelectorAll(".link_wrapper").forEach(((e, t) => { const n = setTimeout((() => { requestAnimationFrame((() => { e.style.transform = "translate(0, 0)" })) }), 20 * t); i.push(n) })), e.forEach((e => { e.style.opacity = 1 })) } })), e.addEventListener("mouseleave", (e => { const t = e.target.closest(".nav_parent_list_item"), s = t.getAttribute("data-parentlistid"); if (i.forEach((e => clearTimeout(e))), i = [], s === n?.id) { const e = n.querySelectorAll(".nav_child_list_item"), s = n.querySelectorAll(".link_wrapper"); n.classList.remove("active-hover"), t.classList.remove("active-nav"), s.forEach((e => { e.style.transform = "translate3d(0, 40px, 0)" })), e.forEach((e => { e.style.opacity = 0 })) } })), n?.addEventListener("mouseenter", (() => { e.classList.add("active-hovered"), n.classList.add("active-hover") })), n?.addEventListener("mouseleave", (() => { const t = n.querySelectorAll(".card-post"); e.classList.remove("active-hovered"), n.classList.remove("active-hover"), a.forEach((e => { e.classList.remove("active-hover"); const t = e.querySelector(".grandchild_list_item.active"); t && t.classList.remove("active") })), t.forEach((e => { const t = e.querySelector(".post_wrapper.active"); t?.classList.contains("active") && t.classList.remove("active") })), s.forEach((e => { const t = e.closest(".nav_child_list_item"); e.classList.contains("opened") && (e.classList.remove("opened"), r = null), t.classList.contains("active") && t.classList.remove("active") })) })) })), s.forEach((e => { e.addEventListener("click", (t => { const n = t.target.closest(".nav_parent_list_item").querySelectorAll(".grand_children .grandchild_ul"), s = t.target.closest(".nav_child_list_item"); if (e === r) return e.classList.toggle("opened"), n.forEach((t => { e.id === t.id && t.classList.toggle("active-hover") })), e.classList.contains("opened") ? s.classList.add("active") : s.classList.remove("active"), void (e.classList.contains("opened") || (r = null)); if (r) { r.classList.remove("opened"); const e = r.closest(".nav_child_list_item"); e && e.classList.remove("active") } n.forEach((e => { e.classList.remove("active-hover") })), n.forEach((t => { e.id === t.id && (e.classList.toggle("opened"), t.classList.add("active-hover")) })), s.classList.add("active"), r = e })) })); const l = document.querySelectorAll(".grandchild_list_item"); l.forEach((e => { const t = e.querySelector("a").getAttribute("href"); e.addEventListener("mouseenter", (() => { l.forEach((e => e.classList.remove("active"))), e.classList.add("active"), o.forEach((e => { e.getAttribute("data-url") === t ? e.classList.add("active") : e.classList.remove("active") })) })) })), menuMobileBtnToggle(), mobilePlusIconClick(), customSearch(), revealSearch() } function customSearch() { const e = document?.getElementById("search-input"), t = document.querySelector(".search_matches_wrapper"), n = document.querySelector(".search-results-list"), s = document.createElement("div"); s.className = "loading-indicator", s.textContent = "Loading...", s.style.display = "none", t?.appendChild(s); const a = {}; e && (e.addEventListener("focus", (function () { fetch(ajax_object.ajax_url, { method: "POST", headers: { "Content-Type": "application/x-www-form-urlencoded" }, body: "action=ajax_latest_posts" }).then((e => e.text())).then((e => { n.innerHTML = e, t.style.display = "block" })).catch((e => console.error("Error:", e))) })), e.addEventListener("input", function (e, t) { let n; return function (...s) { clearTimeout(n), n = setTimeout((() => e.apply(this, s)), t) } }((function () { let e = this.value.trim(); e.length > 2 ? a[e] ? (n.innerHTML = a[e], t.style.display = "block") : (s.style.display = "block", fetch(ajax_object.ajax_url, { method: "POST", headers: { "Content-Type": "application/x-www-form-urlencoded" }, body: "action=ajax_search&search=" + encodeURIComponent(e) }).then((e => e.text())).then((s => { a[e] = s, n.innerHTML = s, t.style.display = "block" })).catch((e => console.error("Error:", e))).finally((() => { s.style.display = "none" }))) : (n.innerHTML = "", t.style.display = "none") }), 300))), document.addEventListener("click", (function (n) { t.contains(n.target) || e.contains(n.target) || (t.style.display = "none") })) } function revealSearch() { const e = document.querySelector("header"), t = document.getElementById("showsearchinput"), n = document?.getElementById("search-input"), s = document.querySelector(".nav_search_wrapper"), a = document.querySelector(".search_wrapper"), o = document.getElementById("close_search"); t?.addEventListener("click", (() => { s.classList.add("hide-animate"), e.classList.add("search-open"), setTimeout((() => { toggleClass(s, "hide-animate", "hidden"), toggleClass(a, "d-none", "show"), n.focus() }), 200) })), o?.addEventListener("click", (() => { toggleClass(a, "show", "hide-animate"), e.classList.remove("search-open"), setTimeout((() => { toggleClass(a, "hide-animate", "d-none"), toggleClass(s, "hidden", "show") }), 200) })) } function mobilePlusIconClick() { const e = document.querySelectorAll(".sm_plus_icon"), t = document.querySelectorAll(".sm_plus_icon_child"); e.forEach((e => { const t = e.dataset.smiconplus, n = document.getElementById(t); e.addEventListener("click", (() => { window.innerWidth <= 1310 && n && (n.classList.toggle("active"), e.classList.toggle("active")) })) })), t.forEach((e => { e.addEventListener("click", (() => { window.innerWidth <= 1310 && document.querySelectorAll(".grandchild_ul_sm").forEach((t => { t.id === e.getAttribute("data-childsmicon") && (t.classList.toggle("active"), e.classList.toggle("active")) })) })) })) } function menuMobileBtnToggle() { const e = document.getElementById("menuMobileButton"), t = document.querySelector(".mobile_nav_show"); e?.addEventListener("click", (() => { if (window.innerWidth <= 1310) { "no" === e.getAttribute("data-menu-reveal") ? (e.setAttribute("data-menu-reveal", "yes"), e.classList.add("reveal_menu_nav"), e.querySelector(".default_mobile_menu").classList.add("hide"), e.querySelector(".close_mobile_menu").classList.add("active"), t.classList.contains("default") && (t.classList.remove("default"), t.classList.add("opened"))) : (e.setAttribute("data-menu-reveal", "no"), e.classList.remove("reveal_menu_nav"), t.classList.remove("opened"), t.classList.add("closed"), e.querySelector(".default_mobile_menu").classList.remove("hide"), e.querySelector(".close_mobile_menu").classList.remove("active"), setTimeout((() => { t.classList.remove("closed"), t.classList.add("default") }), 500)) } })) } function toggleClass(e, t, n) { e.classList.contains(t) && (e.classList.remove(t), e.classList.add(n)) } document.addEventListener("readystatechange", (e => { if ("complete" === e.target.readyState) { customHeaderNavigation(), tabFunc(), showAwardImageFunc(), getNewsAndEventsPosts(["awards-and-rankings", "news"]), getPodcastsAndWebinars(["webinars-and-podcasts", "webinars"], null), getNewsletterPosts(), initNewsletterPage(), getAwardPosts(); const e = document.getElementById("all"); currentUrl.startsWith(origin + "/news") && e?.classList.add("active"); const t = document?.getElementById("hong-kong-law"); t?.classList.add("active") } })); const tabFunc = () => { document.querySelectorAll(".awards_section_component").forEach((e => { const t = e.querySelector(".next_tab_btn"), n = e.querySelector(".prev_tab_btn"), s = e.querySelector(".award_tabs"), a = e.querySelectorAll(".tab_btn"); let o = 0; a.forEach((e => { o += e.getBoundingClientRect().width })); let i = e.querySelector(".award_tabs_container"); window.innerWidth <= 1023 ? i.style.maxWidth = o / a.length * 3 + "px" : i.style.maxWidth = o / a.length * 5 + "px"; const r = e.querySelector(".award_tabs_container").getBoundingClientRect().width; let l = 0; const c = o - i.getBoundingClientRect().width; o <= r && (t.disabled = !0), t.addEventListener("click", (() => { l -= a[0].getBoundingClientRect().width, l <= -c ? (l = -c, t.disabled = !0) : n.disabled = !1, s.style.transform = `translateX(${l}px)` })), n.addEventListener("click", (() => { l += a[0].getBoundingClientRect().width, l >= 0 ? (l = 0, n.disabled = !0) : t.disabled = !1, s.style.transform = `translateX(${l}px)` })); const d = e.querySelectorAll(".tab_content"); a.forEach((e => { e.addEventListener("click", (e => { const t = e.currentTarget.dataset.tab; a.forEach((e => { e.classList.remove("active") })), e.currentTarget.classList.add("active"), d.forEach((e => { e.id === t ? e.classList.add("active") : e.classList.remove("active") })) })) })) })) }, showAwardImageFunc = () => { document.querySelectorAll(".component_wrapper").forEach((e => { const t = e.querySelectorAll(".award_img_wrapper img"); e.querySelectorAll(".award_list_wrapper > li").forEach((e => { e.addEventListener("mouseenter", (e => { e.stopPropagation(); const n = e.currentTarget.id; t.forEach((e => { e.dataset.awardimageid === n ? e.classList.add("active") : e.classList.remove("active") })) })) })) })) }; let currentFilterID = null, postsPerPage = 15, currentPage = 1; const SELECTORS = { allNewsPosts: "#all_news_posts", cardsPosts: ".news_article_wrapper", paginationWrapper: "#news_pagination_btns_wrapper", prevBtn: "#prev_post_btn", nextBtn: "#next_post_btn", firstBtn: "#first_post_btn", lastBtn: "#last_post_btn", newsEventsFilterButtons: ".news_btn_tag_filter", awardsFilterButton: ".awards_btn_filter", newsHiddenInput: ".newsevents_hidden_input", CategPPWFilterButtons: ".ppw_category_filter", NewslettersFilterButtons: ".newsletter_category_filter", TagsPPWFilterButtons: ".ppw_tag_btn_filter", paginationdots_first: "#ne_pagination_dots_first", paginationdots_last: "#ne_pagination_dots", podAndWebinarFilterButtons: ".pod_web_btn_filter" }, ppwArticlesPost = Array.from(document.querySelectorAll(".insights_post_title_wrapper")), articlePostContainers = document.querySelectorAll(".articles_wrapper"); function filterByCategoryOrTag(e, t) { document.querySelectorAll("category" === t ? ".ppw_tag_btn_filter" : ".ppw_category_filter").forEach((e => e.classList.remove("active"))), articlePostContainers.forEach((e => e.innerHTML = "")), ppwArticlesPost.forEach((n => { const s = n.dataset.category, a = n.dataset.tags ? n.dataset.tags.split(",") : [], o = n.dataset.year; ("category" === t ? !e || s === e : !e || a.some((t => t.trim() === e))) && articlePostContainers.forEach((e => { e.id === o && e.appendChild(n) })) })), articlePostContainers.forEach((e => { const t = e.closest(".insights_yearly_wrapper"); 0 === e.children.length ? (t.classList.remove("flex"), t.classList.add("d-none")) : (t.classList.add("flex"), t.classList.remove("d-none")) })) } FilterButton.initializeAll(SELECTORS.TagsPPWFilterButtons, (e => { filterByCategoryOrTag("all" === e ? null : e, "tag") })), FilterButton.initializeAll(SELECTORS.CategPPWFilterButtons, (e => { filterByCategoryOrTag("all" === e ? null : e, "category") })); const insightFilterButtons = document.getElementById("insights_filter_toggle"), svgFilterIcon = document.getElementById("insights_filter_icon"), svgCloseIcon = document.getElementById("insights_filter_close_icon"), filterBtnsContainer = document.querySelector(".insights_page.btn_tag_filter_wrapper"); function toggleFilter(e) { e.preventDefault(); const t = insightFilterButtons.classList.toggle("active"), n = t ? "true" : "false"; insightFilterButtons.setAttribute("data-state", n), svgCloseIcon.classList.toggle("hidden", !t), svgFilterIcon.classList.toggle("hidden", t), filterBtnsContainer.classList.toggle("hidden", !t) } function initNewsletterPage() { const e = document.querySelector(".single_post_content_wrapper"), t = document?.getElementById("read_time_est"); if (e && t) { const n = e.innerText.trim().split(/\s+/).length; t.innerText = `${Math.ceil(n / 200)} minute read` } else console.warn("Wrapper or read time element not found!"); const n = (e, t) => { if (!e) return console.error(t); const n = Object.assign(document.createElement("a"), { href: e, target: "_blank" }); document.body.appendChild(n).click(), document.body.removeChild(n) }, s = document.getElementById("open_dl_options"), a = document.getElementById("nlDowloadOptions"), o = document.getElementById("dl_pdf"), i = document.getElementById("dl_word"); s?.addEventListener("click", (() => r(a))); const r = e => { const t = e.classList.toggle("open"); e.setAttribute("aria-hidden", !t); const n = t => { e.contains(t.target) || s.contains(t.target) || (e.classList.remove("open"), e.setAttribute("aria-hidden", "true"), document.removeEventListener("click", n)) }; t ? document.addEventListener("click", n) : document.removeEventListener("click", n) }; o?.addEventListener("click", (() => { n(document.getElementById("pdf_url_hidden_input")?.value, "PDF URL is not available."), a.classList.remove("open") })), i?.addEventListener("click", (() => { n(document.getElementById("word_url_hidden_input")?.value, "Word URL is not available."), a.classList.remove("open") })); const l = document.querySelectorAll(".share_btn"); l.forEach((e => { e.addEventListener("click", (t => { t.stopPropagation(), (e => { const t = document.getElementById("nlShareOptions"), n = t => { const s = document.getElementById("nlShareOptions"); !s || s.contains(t.target) || e.contains(t.target) || (s.remove(), e.setAttribute("data-dialog", "close"), e.classList.remove("open"), document.removeEventListener("click", n)) }; t ? (t.remove(), e.setAttribute("data-dialog", "close"), e.classList.remove("open"), document.removeEventListener("click", n)) : (e.insertAdjacentHTML("afterend", '   \n    <div id="nlShareOptions">\n    <ul>\n        <li>\n            <button>\n                <div class="flex gap-1 items-center">\n                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none"\n                        viewBox="0 0 24 24">\n                        <path fill="#5f6368" fill-rule="evenodd"\n                            d="m12.505 9.678.59-.59a5 5 0 0 1 1.027 7.862l-2.829 2.83a5 5 0 0 1-7.07-7.072l2.382-2.383q.002.646.117 1.298l-1.793 1.792a4 4 0 0 0 5.657 5.657l2.828-2.828a4 4 0 0 0-1.046-6.411q.063-.081.137-.155m-1.01 4.646-.589.59a5 5 0 0 1-1.027-7.862l2.828-2.83a5 5 0 0 1 7.071 7.072l-2.382 2.383a7.7 7.7 0 0 0-.117-1.297l1.792-1.793a4 4 0 1 0-5.657-5.657l-2.828 2.828a4 4 0 0 0 1.047 6.411 2 2 0 0 1-.138.155"\n                            clip-rule="evenodd"></path>\n                    </svg>\n                    <div>Copy link</div>\n                </div>\n            </button>\n        </li>\n        <li>\n            <button aria-label="Share on linkedin" class="flex gap-1 items-center">\n                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none"\n                    viewBox="0 0 24 24" class="cg aoi">\n                    <path fill="#5f6368"\n                        d="M21 4.324v15.352A1.324 1.324 0 0 1 19.676 21H4.324A1.324 1.324 0 0 1 3 19.676V4.324A1.324 1.324 0 0 1 4.324 3h15.352A1.324 1.324 0 0 1 21 4.324M8.295 9.886H5.648v8.478h2.636V9.886zm.221-2.914a1.52 1.52 0 0 0-1.51-1.533H6.96a1.533 1.533 0 0 0 0 3.066 1.52 1.52 0 0 0 1.556-1.487zm9.825 6.236c0-2.555-1.626-3.542-3.229-3.542a3.02 3.02 0 0 0-2.67 1.37h-.082V9.875H9.875v8.477h2.648v-4.494a1.754 1.754 0 0 1 1.579-1.893h.104c.837 0 1.464.523 1.464 1.858v4.54h2.647l.024-5.144z">\n                    </path>\n                </svg>\n                <div class="ca hq">Share on LinkedIn</div>\n            </button>\n        </li>\n        <li>\n            <button aria-label="Share on twitter" class="flex gap-1 items-center">\n                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none"\n                    viewBox="0 0 24 24" class="cg aoi">\n                    <path fill="#5f6368"\n                        d="M13.346 10.932 18.88 4.5h-1.311l-4.805 5.585L8.926 4.5H4.5l5.803 8.446L4.5 19.69h1.311l5.074-5.898 4.053 5.898h4.426zM11.55 13.02l-.588-.84-4.678-6.693h2.014l3.776 5.4.588.842 4.907 7.02h-2.014z">\n                    </path>\n                </svg>\n                <div>Share on X</div>\n            </button>\n        </li>\n        <li>\n            <button aria-label="Share on facebook" class="flex gap-1 items-center">\n                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none"\n                    viewBox="0 0 24 24" class="cg aoi">\n                    <path fill="#5f6368"\n                        d="M22 12.061C22 6.505 17.523 2 12 2S2 6.505 2 12.061c0 5.022 3.657 9.184 8.438 9.939v-7.03h-2.54V12.06h2.54V9.845c0-2.522 1.492-3.915 3.777-3.915 1.094 0 2.238.197 2.238.197v2.476h-1.26c-1.243 0-1.63.775-1.63 1.57v1.888h2.773l-.443 2.908h-2.33V22c4.78-.755 8.437-4.917 8.437-9.939">\n                    </path>\n                </svg>\n                <div>Share on Facebook</div>\n            </button>\n        </li>\n    </ul>\n    </div>\n    '), e.nextElementSibling.classList.add("open"), e.setAttribute("data-dialog", "open"), e.classList.add("open"), document.querySelectorAll("#nlShareOptions button").forEach((e => { const t = c[e.textContent.trim()]; t && e.addEventListener("click", (() => { d(t), l.forEach((e => { e.setAttribute("data-dialog", "close"), e.classList.remove("open") })) })) })), document.addEventListener("click", n)) })(e) })) })); const c = { "Copy link": "copy", "Share on LinkedIn": "https://www.linkedin.com/shareArticle?url=", "Share on X": "https://twitter.com/intent/tweet?url=", "Share on Facebook": "https://www.facebook.com/sharer/sharer.php?u=" }, d = e => { const t = window.location.href; "copy" === e ? navigator.clipboard.writeText(t).then((() => { const e = Object.assign(document.createElement("div"), { textContent: "URL copied to clipboard!", style: "position: absolute; top: 80%; left: 50%; transform: translate(-50%, -50%); background-color: black; color: white; padding: 10px; border-radius: 5px; z-index: 900;" }); document.body.appendChild(e), setTimeout((() => document.body.removeChild(e)), 2e3) })) : "mailto" === e ? window.location.href = `mailto:?subject=${encodeURIComponent("Check out this page")}&body=${encodeURIComponent(`I found this interesting: ${t}`)}` : window.open(e + encodeURIComponent(t), "_blank"); const n = document.getElementById("nlShareOptions"); n && n.remove() } } insightFilterButtons?.addEventListener("click", toggleFilter); const openIndexedDB = (e, t = 1) => new Promise(((n, s) => { const a = indexedDB.open(e, t); a.onerror = e => { console.error("IndexedDB Error:", e.target.errorCode), s(e.target.errorCode) }, a.onsuccess = e => { const t = e.target.result; n(t) }, a.onupgradeneeded = e => { const t = e.target.result; console.log("Database upgrade needed:", t) } })); async function fetchPostsFromDB(e, t, n) { try { const s = (await openIndexedDB(e)).transaction([t], "readonly"), a = s.objectStore(t), o = []; return a.openCursor().onsuccess = function (e) { const t = e.target.result; t && (n(t.value) && o.push(t.value), t.continue()) }, new Promise(((e, t) => { s.oncomplete = () => e(o), s.onerror = e => t(e.target.errorCode) })) } catch (e) { return console.error("Failed to open database:", e), [] } } function createCardUI(e, t = "award", n = !1) { const s = document.createElement("article"); s.className = getClassName(t), s.setAttribute("data-category", e.categories), s.setAttribute("data-tags", e.tags); const a = formatDate(e.post_date); return "newsletter" === t ? (s.setAttribute("data-nl_date", e.post_date), s.innerHTML = getNewsletterHTML(e, a)) : s.innerHTML = "news" === t ? getNewsHTML(e, a) : getAwardHTML(e, a), s } function getClassName(e) { switch (e) { case "award": return "awards_card_item"; case "newsletter": return "newsletter_post_item flex-col"; case "news": return "news_article_wrapper"; default: return "" } } function formatDate(e) { const t = parseDate(e); return t && !isNaN(t.getTime()) ? t.toLocaleDateString("en-GB", { month: "short", year: "numeric" }) : "Invalid Date" } function getImageHTML(e, t, n, s) { return `\n    <img decoding="async" width="${t}" height="${n}" class="${s}"\n      src="${sanitizeHTML(e.featured_image)}"\n      srcset="${sanitizeHTML(e.featured_image_small || e.featured_image)} 300w,\n              ${sanitizeHTML(e.featured_image_medium || e.featured_image)} 768w,\n              ${sanitizeHTML(e.featured_image_large || e.featured_image)} 1024w"\n      alt="${sanitizeHTML(decodeHTMLEntities(e.title))}">\n  ` } function getNewsletterHTML(e, t) { return `\n    <a href="${sanitizeHTML(e.url)}" rel="noopener noreferrer" aria-label="${sanitizeHTML(decodeHTMLEntities(e.title))}">\n      <div class="post-thumbnail">\n        ${getImageHTML(e, 286, 286, "")}\n        <time class="post-date" datetime="${sanitizeHTML(e.post_date)}">${t}</time>\n        <h2 class="post-title" title="${sanitizeHTML(decodeHTMLEntities(e.title))}">${sanitizeHTML(decodeHTMLEntities(e.title))}</h2>\n      </div>\n    </a>\n  ` } function getNewsHTML(e, t) { return `\n    <div class="news_card_image">\n      <a href="${sanitizeHTML(e.url)}" rel="noopener noreferrer" aria-label="${sanitizeHTML(decodeHTMLEntities(e.title))}" title="${sanitizeHTML(decodeHTMLEntities(e.title))}">\n        ${getImageHTML(e, 320, 320, "border-1")}\n      </a>\n    </div>\n    <div class="news_card_content">\n      <div class="newsevents__post_date">${t}</div>\n      <a href="${sanitizeHTML(e.url)}" rel="noopener noreferrer" aria-label="${sanitizeHTML(decodeHTMLEntities(e.title))}" title="${sanitizeHTML(decodeHTMLEntities(e.title))}">\n        <h2 class="newsevents__post_title fw-medium">${sanitizeHTML(decodeHTMLEntities(e.title))}</h2>\n      </a>\n    </div>\n  ` } function getAwardHTML(e, t) { return `\n    <a href="${sanitizeHTML(e.url)}" rel="noopener noreferrer" aria-label="${sanitizeHTML(decodeHTMLEntities(e.title))}">\n      ${getImageHTML(e, 300, 300, "awards_card_img")}\n      <div>\n        <div class="categ_date flex">\n          <div class="categ_lbl capitalize pr-2">${sanitizeHTML(decodeHTMLEntities(e.category_names))}</div>\n          <div class="date_posted text-gray-700 fw-light">${t}</div>\n        </div>\n        <div class="title">${sanitizeHTML(decodeHTMLEntities(e.title))}</div>\n      </div>\n    </a>\n  ` } function sanitizeHTML(e) { const t = document.createElement("div"); return t.textContent = e, t.innerHTML } function decodeHTMLEntities(e) { const t = document.createElement("textarea"); return t.innerHTML = e, t.value } function parseDate(e) { const t = e.split("-"); if (3 !== t.length) return null; const n = parseInt(t[0], 10), s = parseInt(t[1], 10) - 1, a = parseInt(t[2], 10); return new Date(a, s, n) } function sortPostsByDate(e) { return e.sort(((e, t) => new Date(t.post_date.split("-").reverse().join("-")) - new Date(e.post_date.split("-").reverse().join("-")))) } function addLoadMoreButton(e, t, n, s, a, o, i = "award") { const r = document.createElement("button"); r.textContent = "See More", r.className = "load-more-button btn-primary border-0 cursor-pointer", e?.appendChild(r), r.addEventListener("click", (() => { if ("See More" === r.textContent) { n.slice(s, s + a).forEach((e => { const n = o(e, i); t.appendChild(n) })), (s += a) >= n.length && (r.textContent = "Show Less") } else { t.innerHTML = ""; n.slice(0, a).forEach((e => { const n = o(e, i); t.appendChild(n) })), s = a, r.textContent = "See More" } })) } async function getAwardPosts() { let e = 0; const t = sortPostsByDate(await fetchPostsFromDB("PostsDatabase", "posts", (e => e.tags.toLowerCase().split(", ").includes("awards")))), n = document?.getElementById("all_awards_wrapper"), s = document?.getElementById("load_more_container"); t.slice(0, 25).forEach((e => { const t = createCardUI(e, "award", !0); n?.appendChild(t) })), e = 25, t.length > 25 && addLoadMoreButton(s, n, t, 25, 25, createCardUI) } async function showFilteredAwards(e) { let t = 0; const n = sortPostsByDate(await fetchPostsFromDB("PostsDatabase", "posts", (e => e.tags.toLowerCase().split(", ").includes("awards")))), s = document?.getElementById("all_awards_wrapper"), a = document?.getElementById("load_more_container"); a.innerHTML = "", s.innerHTML = ""; const o = n.filter((t => { const n = t.tags.toLowerCase().split(", "); return !e || n.includes(e) })); o.slice(0, 10).forEach((e => { const t = createCardUI(e, "award", !0); s?.appendChild(t) })), t = 10, o.length > 10 && addLoadMoreButton(a, s, o, 10, 10, createCardUI) } async function showFilteredAwardsByYear(e) { let t = 0; const n = sortPostsByDate(await fetchPostsFromDB("PostsDatabase", "posts", (e => e.tags.toLowerCase().split(", ").includes("awards")))), s = document?.getElementById("all_awards_wrapper"), a = document?.getElementById("load_more_container"); a.innerHTML = "", s.innerHTML = ""; const o = n.filter((t => { const n = parseInt(t.post_date.split("-")[2], 10); if (!e) return !0; const s = parseInt(e, 10); return 2020 === s ? n >= 2020 : 2010 === s ? n >= 2010 && n <= 2019 : 2e3 === s ? n >= 2e3 && n <= 2009 : n === s })); o.slice(0, 20).forEach((e => { const t = createCardUI(e, "award", !0); s?.appendChild(t) })), t = 20, o.length > 20 && addLoadMoreButton(a, s, o, 20, 20, createCardUI) } FilterButton.initializeAll(SELECTORS.awardsFilterButton, (e => { currentFilterID = "all" === e ? null : e, showFilteredAwards(currentFilterID); const t = document?.querySelector(".awards_btn_yrfilter.active"); t && t.classList.remove("active") })), FilterButton.initializeAll(".awards_btn_yrfilter", (e => { currentFilterID = "all" === e ? null : e, showFilteredAwardsByYear(currentFilterID); const t = document?.querySelector(".awards_btn_filter.active"); t && t.classList.remove("active") })); const searchInput = document?.getElementById("newsletterSearch"), showCloseButton = document?.getElementById("nl_close_search"), nlSearchIcon = document?.getElementById("nl_search_icon"); async function getNewsletterPosts(e = "hong-kong-law") { let t = 0; const n = sortPostsByDate(await fetchPostsFromDB("PostsDatabase", "posts", (t => t.categories.toLowerCase().split(", ").includes(e)))), s = document?.getElementById("newsletters_post"), a = document?.getElementById("btn_load_more_wrapper"); n.slice(0, 16).forEach((e => { const t = createCardUI(e, "newsletter", !0); s?.appendChild(t) })), t = 16, n.length > 16 && addLoadMoreButton(a, s, n, 16, 16, createCardUI, "newsletter") } async function showFilteredNewsletters(e) { let t = 0; const n = sortPostsByDate(await fetchPostsFromDB("PostsDatabase", "posts", (t => t.categories.toLowerCase().split(", ").includes(e)))), s = document?.getElementById("newsletters_post"), a = document?.getElementById("btn_load_more_wrapper"); a.innerHTML = "", s.innerHTML = ""; const o = n.filter((t => { const n = t.categories.toLowerCase().split(", "); return !e || n.includes(e) })); o.slice(0, 16).forEach((e => { const t = createCardUI(e, "newsletter", !0); s?.appendChild(t) })), t = 16, o.length > 16 && addLoadMoreButton(a, s, o, 16, 16, createCardUI, "newsletter") } FilterButton.initializeAll(SELECTORS.NewslettersFilterButtons, (e => { currentFilterID = "all" === e ? null : e, showFilteredNewsletters(currentFilterID) })), searchInput?.addEventListener("input", (async function (e) { const t = e.target.value.toLowerCase(), n = document?.querySelector(".newsletter_category_filter.active"); showCloseButton.classList.toggle("active", searchInput.value.length >= 2), searchInput.value.length >= 2 ? nlSearchIcon.style.display = "none" : 0 === searchInput.value.length && (nlSearchIcon.style.display = "flex"); let s = 0; const a = sortPostsByDate(await fetchPostsFromDB("PostsDatabase", "posts", (e => e.categories.toLowerCase().split(", ").includes(n?.id)))); console.log(a.length); const o = document?.getElementById("newsletters_post"), i = document?.getElementById("btn_load_more_wrapper"); i.innerHTML = "", o.innerHTML = ""; const r = a.filter((e => e.title.toLowerCase().includes(t))); r.slice(0, 16).forEach((e => { const t = createCardUI(e, "newsletter", !0); o?.appendChild(t) })), s = 16, r.length > 16 && addLoadMoreButton(i, o, r, 16, 16, createCardUI, "newsletter") })), showCloseButton?.addEventListener("click", (function () { searchInput.value = "", showCloseButton.classList.remove("active"); const e = document?.querySelector(".newsletter_category_filter.active"); showFilteredNewsletters(e?.id) })); const buttonSVG = document.querySelectorAll(".arrow_right_svg_plus_icon"); function renderPosts(e, t, n = 15, s) { const a = document?.getElementById(s); a && (a.innerHTML = ""); const o = (t - 1) * n, i = o + n; e.slice(o, i).forEach((e => { const t = createCardUI(e, "news", !0); a?.appendChild(t) })) } function renderPagination(e, t = 15, n) { const s = document?.getElementById("news_pagination_btns_wrapper"), a = document?.getElementById("prev_post_btn"), o = document?.getElementById("next_post_btn"), i = document?.getElementById("first_post_btn"), r = document?.getElementById("last_post_btn"), l = document?.getElementById("ne_pagination_dots_first"), c = document?.getElementById("ne_pagination_dots"); let d = 1; const u = Math.ceil(e.length / t); function m() { s && (s.innerHTML = ""); let p = 5 * Math.floor((d - 1) / 5) + 1, h = p + 4; for (let a = 1; a <= u; a++) { const o = document.createElement("button"); o.textContent = a, o.className = "pagination_btn", (a < p || a > h) && o.classList.add("d-none"), a === d && o.classList.add("active"), o.addEventListener("click", (() => { d = a, renderPosts(e, d, t, n), m() })), s?.appendChild(o) } i && i.classList.add("d-none"), a && a.classList.add("d-none"), o && o.classList.toggle("d-none", d === u), r && r.classList.toggle("d-none", d === u || u <= 5), l && l.classList.toggle("d-none", d <= 5), c && c.classList.toggle("d-none", d >= u - 2), d >= 6 && (a && a.classList.remove("d-none"), i && i.classList.remove("d-none"), i && (i.textContent = "1")), d < u && r && (r.textContent = u) } a?.addEventListener("click", (() => { d > 1 && (d--, renderPosts(e, d, t, n), m()) })), o?.addEventListener("click", (() => { d < u && (d++, renderPosts(e, d, t, n), m()) })), i?.addEventListener("click", (() => { d = 1, renderPosts(e, d, t, n), m() })), r?.addEventListener("click", (() => { d = u, renderPosts(e, d, t, n), m() })), m() } async function getNewsAndEventsPosts(e = [], t = null) { const n = await fetchPostsFromDB("PostsDatabase", "posts", (t => t.categories.toLowerCase().split(", ").some((t => e.includes(t))))); let s = n; t && (s = n.filter((e => e.tags.toLowerCase().split(", ").includes(t)))); const a = sortPostsByDate(s); renderPosts(a, 1, 15, "all_news_posts"), renderPagination(a, 15, "all_news_posts") } async function getPodcastsAndWebinars(e = [], t = null) { let n = [...await fetchPostsFromDB("PostsDatabase", "posts", (e => e)), ...await fetchPostsFromDB("CustomPostsDatabase", "custom_posts", (e => e))]; e.length && (n = n.filter((t => { const n = t.categories.toLowerCase().split(", "); return e.some((e => n.includes(e))) }))), t && (n = n.filter((e => e.tags.toLowerCase().split(", ").includes(t)))); const s = sortPostsByDate(n); renderPosts(s, 1, 15, "pod-and-web"), renderPagination(s, 15, "pod-and-web") } buttonSVG.forEach((e => { e.addEventListener("click", (() => { e.classList.toggle("active"); const t = e.closest(".services_list_item"); if (t) { const e = t.querySelector(".sub_services_list"); e && e.classList.toggle("active") } })) })), FilterButton.initializeAll(SELECTORS.newsEventsFilterButtons, (e => { currentFilterID = "all" === e ? null : e, getNewsAndEventsPosts(["awards-and-rankings", "news"], currentFilterID) })), FilterButton.initializeAll(SELECTORS.podAndWebinarFilterButtons, (e => { currentFilterID = "all" === e ? null : e, getPodcastsAndWebinars(["webinars-and-podcasts", "webinars"], currentFilterID) }));